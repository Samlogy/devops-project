name: Node App CD
on:
  push:
    branches:
      - main
      - dev

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  AWS_EC2_KEY_CLIENT: ${{ secrets.AWS_EC2_KEY_CLIENT }}
  AWS_EC2_USERNAME_CLIENT: ${{ secrets.AWS_EC2_USERNAME_CLIENT }}
  AWS_EC2_IP_CLIENT: ${{ secrets.AWS_EC2_IP_CLIENT }}

jobs:
    cd:
        needs: ci
        runs-on: ubuntu-latest
        steps:
        - name: Pull Docker image
            run: |
            ssh -o StrictHostKeyChecking=no -i ${{ env.AWS_EC2_KEY_CLIENT }} ${{ env.AWS_EC2_USERNAME_CLIENT }}@${{ env.AWS_EC2_IP_CLIENT }} 'sudo docker pull ${{ env.DOCKER_USERNAME }}/node-app:latest'

        - name: Stop running container
            run: |
            ssh -o StrictHostKeyChecking=no -i ${{ env.AWS_EC2_KEY_CLIENT }} ${{ env.AWS_EC2_USERNAME_CLIENT }}@${{ env.AWS_EC2_IP_CLIENT }} 'sudo docker stop node-app || true'
            ssh -o StrictHostKeyChecking=no -i ${{ env.AWS_EC2_KEY_CLIENT }} ${{ env.AWS_EC2_USERNAME_CLIENT }}@${{ env.AWS_EC2_IP_CLIENT }} 'sudo docker rm -f node-app || true'

        - name: Run new container
            run: |
            ssh -o StrictHostKeyChecking=no -i ${{ env.AWS_EC2_KEY_CLIENT }} ${{ env.AWS_EC2_USERNAME_CLIENT }}@${{ env.AWS_EC2_IP_CLIENT }} 'sudo docker run -d --name node-app -p 3000:3000 ${{ env.DOCKER_USERNAME }}/node-app:latest'